{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Content/index.js","webpack:///./src/components/Content/index.module.scss","webpack:///./src/components/Gallery/index.module.scss","webpack:///./src/components/Home/index.module.scss","webpack:///./src/components/Gallery/index.js","webpack:///./src/components/Home/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Home__WEBPACK_IMPORTED_MODULE_1__","IndexPage","_ref","data","a","createElement","images","allHomeJson","edges","node","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Content","children","className","styles","content","contentInner","propTypes","PropTypes","isRequired","module","exports","grid","row","cell","isVisible","imageWrapper","emptyCell","intro","cx","cn","bind","Gallery","state","imageIndex","getSrc","image","src","childImageSharp","fluid","onPrev","this","props","setState","length","onNext","onClose","onClick","index","_this2","renderCell","type","react_default","gatsby_image_default","imgStyle","transition","title","alt","render","_this3","rows","map","indexRow","key","main_default","reactModalProps","shouldReturnFocusAfterClose","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","rowCells","reduce","memo","lastRowIndex","lastRow","lastCellIndex","lastCell","full","push","React","Component","autobind","Home","pathname","pageTitle","Layout","metaImage","Header","Gallery_Gallery"],"mappings":"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","file":"component---src-pages-index-js-1164779b2ebf54c8b812.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Home from '../components/Home'\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Home images={data.allHomeJson.edges[0].node.images} />\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allHomeJson {\n      edges {\n        node {\n          images {\n            title\n            alt\n            src {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            full\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './index.module.scss'\n\nconst Content = ({ children }) => (\n  <div className={styles.content}>\n    <div className={styles.contentInner}>\n      {children}\n    </div>\n  </div>\n)\n\nContent.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Content\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"index-module--content--3DmGQ\",\"contentInner\":\"index-module--contentInner--28CwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"index-module--grid--3MKCA\",\"row\":\"index-module--row--1Qoee\",\"cell\":\"index-module--cell--3eccC\",\"isVisible\":\"index-module--isVisible--2z1hs\",\"imageWrapper\":\"index-module--imageWrapper--uHER4\",\"emptyCell\":\"index-module--emptyCell--33LPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"index-module--intro--26JGX\"};","import React from 'react'\nimport cn from 'classnames/bind'\nimport Img from 'gatsby-image'\nimport autobind from 'autobind-decorator'\nimport Lightbox from 'react-image-lightbox'\n\nimport styles from './index.module.scss'\nconst cx = cn.bind(styles)\n\nexport default class Gallery extends React.Component {\n  state = {\n    imageIndex: null\n  }\n\n  get rowCells () {\n    const { images } = this.props\n    return images.map((image, index) => ({\n      type: 'image', image, index\n    }))\n  }\n\n  get rows () {\n    const rows = this.rowCells.reduce((memo, cell) => {\n      const lastRowIndex = memo.length - 1\n      const lastRow = memo[lastRowIndex]\n      const lastCellIndex = lastRow ? lastRow.length - 1 : null\n      const lastCell = lastCellIndex !== null ? lastRow[lastCellIndex] : null\n      const isFull = cell.image.full\n\n      if (\n        !isFull &&\n          lastRow && lastRow.length < 2 &&\n          !lastCell.image.full\n      ) {\n        memo[lastRowIndex].push(cell)\n      } else {\n        memo.push([cell])\n      }\n\n      return memo\n    }, [])\n\n    // Complete last row with empty cell\n    const lastRow = rows[rows.length - 1]\n    if (lastRow.length === 2) return rows\n    const lastCellIndex = lastRow ? lastRow.length - 1 : null\n    const lastCell = lastCellIndex !== null ? lastRow[lastCellIndex] : null\n    if (lastCell.image.full) return rows\n    rows[rows.length - 1].push({ type: 'empty', index: null })\n    return rows\n  }\n\n  getSrc(image) {\n    return image.src.childImageSharp.fluid.src\n  }\n  get mainSrc () {\n    return this.getSrc(this.props.images[this.state.imageIndex])\n  }\n\n  get nextSrc () {\n    const { images } = this.props\n    const { imageIndex } = this.state\n    return this.getSrc(images[(imageIndex + 1) % images.length])\n  }\n\n  get prevSrc () {\n    const { images } = this.props\n    const { imageIndex } = this.state\n    return this.getSrc(images[(imageIndex + images.length - 1) % images.length])\n  }\n\n  @autobind\n  onPrev () {\n    const { images } = this.props\n    const { imageIndex } = this.state\n    this.setState({\n      imageIndex: (imageIndex + images.length - 1) % images.length\n    })\n  }\n\n  @autobind\n  onNext () {\n    const { images } = this.props\n    const { imageIndex } = this.state\n    this.setState({\n      imageIndex: (imageIndex + 1) % images.length\n    })\n  }\n\n  @autobind\n  onClose () {\n    this.setState({ imageIndex: null })\n  }\n\n  @autobind\n  onClick (index) {\n    return () => {\n      if (!index === null) return\n      this.setState({ imageIndex: index })\n    }\n  }\n\n  renderCell (cell) {\n    if (cell.type === 'empty') {\n      return <div className={styles.emptyCell} />\n    }\n    const image = cell.image\n    return (\n      <Img\n        imgStyle={{ transition: 'transform 400ms ease-out' }}\n        className={styles.imageWrapper}\n        title={image.title}\n        alt={image.alt}\n        fluid={image.src.childImageSharp.fluid}\n      />\n    )\n  }\n\n  render () {\n    const { imageIndex } = this.state\n\n    return (\n      <div className={styles.grid}>\n        {this.rows.map((row, indexRow) => (\n          <div\n            key={indexRow}\n            className={styles.row}\n          >\n            {row.map((cell, index) => (\n              <div\n                onClick={this.onClick(cell.index)}\n                key={`cell-${index}`}\n                className={cx('cell', { isVisible: cell.type !== 'empty' })}\n              >\n                {this.renderCell(cell)}\n              </div>\n            ))}\n          </div>\n        ))}\n\n        {imageIndex !== null && (\n          <Lightbox\n            reactModalProps={{\n              shouldReturnFocusAfterClose: false\n            }}\n            mainSrc={this.mainSrc}\n            nextSrc={this.nextSrc}\n            prevSrc={this.prevSrc}\n            onCloseRequest={this.onClose}\n            onMovePrevRequest={this.onPrev}\n            onMoveNextRequest={this.onNext}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport Layout from '../Layout'\nimport Gallery from '../Gallery'\nimport Header from '../Header'\nimport Content from '../Content'\n\nimport styles from './index.module.scss'\n\nconst Home = ({ images, pathname, pageTitle }) => {\n  return (\n    <Layout\n      metaImage={images[0].src.childImageSharp.fluid.src}\n      pathname={pathname}\n      pageTitle={pageTitle}\n   >\n      <Header title='Actor y director'>\n        <p className={styles.intro}>\n          Lorem ipsum dolor sit amet consectetur adipiscing elit nisi diam aliquam, mollis a laoreet hac magnis posuere facilisi.\n        </p>\n      </Header>\n      <Content>\n        <Gallery images={images} />\n      </Content>\n    </Layout>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}