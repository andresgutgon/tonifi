{"version":3,"file":"component---src-templates-curriculum-js-fac5f8adefc6fc52c227.js","mappings":"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","sources":["webpack://tonifi-personal-page/./src/components/Content/index.module.scss","webpack://tonifi-personal-page/./src/components/Content/index.js","webpack://tonifi-personal-page/./src/components/TranslatedMessage/index.js","webpack://tonifi-personal-page/./src/components/CurriculumVitae/index.module.scss","webpack://tonifi-personal-page/./src/components/CurriculumVitae/index.js","webpack://tonifi-personal-page/./src/hooks/useFormatMessage.js","webpack://tonifi-personal-page/./node_modules/react-intl/lib/src/components/useIntl.js","webpack://tonifi-personal-page/./src/templates/curriculum.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"index-module--content--Ni+7M\",\"contentInner\":\"index-module--contentInner--1KuvZ\"};","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './index.module.scss'\n\nconst Content = ({ children }) => (\n  <div className={styles.content}>\n    <div className={styles.contentInner}>\n      {children}\n    </div>\n  </div>\n)\n\nContent.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Content\n","import React, { useContext } from 'react'\nimport AppContext from '../../context/AppContext'\n\nexport default function TranslatedMessage({ text }) {\n  const app = useContext(AppContext)\n  const translated = text[app.locale]\n\n  if (typeof text === 'string') return text\n\n  if (!translated) {\n    console.log('wat', text)\n  }\n\n  return translated || null\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"infoLine\":\"index-module--infoLine--AtrCN\",\"separator\":\"index-module--separator--R6HJw\",\"sectionTitle\":\"index-module--sectionTitle--hsma0\",\"category\":\"index-module--category--gRxzI\",\"categoryTitle\":\"index-module--categoryTitle--SJRLn\",\"description\":\"index-module--description--U4nO4\",\"items\":\"index-module--items--xwM56\",\"row\":\"index-module--row--lWa63\",\"col\":\"index-module--col--9d+PR\",\"incompleted\":\"index-module--incompleted--YCsuY\",\"item\":\"index-module--item--KKPer\",\"places\":\"index-module--places--iS7PJ\",\"place\":\"index-module--place---Rm-W\",\"placeList\":\"index-module--placeList--j8o0I\",\"tag\":\"index-module--tag--bJzGv\",\"education\":\"index-module--education--EvYiR\",\"educationItem\":\"index-module--educationItem--wrLVD\",\"title\":\"index-module--title--by6Oj\",\"metadataList\":\"index-module--metadataList--1jFXD\",\"metadata\":\"index-module--metadata--ovZ8N\"};","import * as React from 'react'\nimport cn from 'classnames/bind'\n\nimport { FormattedMessage } from 'react-intl'\nimport TranslatedMessage from '../TranslatedMessage'\nimport useFormatMessage from '../../hooks/useFormatMessage'\nimport Header from '../Header'\nimport Content from '../Content'\n\nimport styles from './index.module.scss'\nconst cx = cn.bind(styles)\n\nconst METADATA = {\n  teacher: 'Professor/a',\n  director: 'Director',\n  author: 'Autor',\n  company: 'Companyia',\n  production: 'Productora',\n}\n\nfunction itemsGrouped(items) {\n  return items.reduce((memo, item) => {\n    const lastRowIndex = memo.length - 1\n    const lastRow = memo[lastRowIndex]\n    if (lastRow && lastRow.length < 2) {\n      memo[lastRowIndex].push(item)\n    } else {\n      memo.push([item])\n    }\n    return memo\n  }, [])\n}\n\nfunction MetaLink({ metaKey, url, name }) {\n  return (\n    <div className={styles.metadata}>\n      <strong>{METADATA[metaKey]}</strong>\n      {!!url && (\n        <a href={url} target=\"_bkank\">\n          <TranslatedMessage text={name} />\n        </a>\n      )}\n      {!url && <TranslatedMessage text={name} />}\n    </div>\n  )\n}\n\nfunction hasMetadata(item) {\n  return !!Object.keys(METADATA).map((_meta) => !item.meta)\n}\n\nfunction Title({ title }) {\n  return (\n    <h4 className={styles.title}>\n      <TranslatedMessage text={title} />\n    </h4>\n  )\n}\n\nfunction MetadataItem({ metaKey, item }) {\n  const content = item[metaKey]\n  let name\n\n  if (!content) return null\n\n  if (metaKey !== 'company') {\n    name = content\n  } else if (metaKey === 'company') {\n    return <MetaLink metaKey={metaKey} url={content.url} name={content.name} />\n  } else {\n    name = content.name\n  }\n\n  const type = typeof name\n  const isArray = Array.isArray(name)\n  if (type !== 'string' && type !== 'number' && !isArray) return null\n  const meta = useFormatMessage(`curriculum.${metaKey}`)\n  name = isArray ? name.join(', ') : name\n  return (\n    <div className={styles.metadata}>\n      {metaKey !== 'years' && <strong>{meta}</strong>}\n      <TranslatedMessage text={name} />\n    </div>\n  )\n}\n\nfunction getSections(showYears = false) {\n  const base = METADATA\n  if (!showYears) return base\n\n  return { ...base, years: 'Anys' }\n}\n\n// NOTE: Discusting code just to avoid refactoring much\nfunction getEntities(item) {\n  return [...item.played, ...(item.producers || [])]\n}\n\nconst CurriculumVitae = ({\n  title,\n  education,\n  work,\n  pdf,\n  showYears = false,\n  descriptions = [],\n}) => {\n  const pdfText = useFormatMessage(pdf.i18n)\n  const sections = getSections(showYears)\n  const sectionKeys = Object.keys(sections)\n  return (\n    <>\n      <Header title={title}>\n        <div className={styles.infoLine}>\n          <ul>\n            <li>\n              <a href={pdf.filepath} target=\"_blank\" rel=\"noopener noreferrer\">\n                {pdfText}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </Header>\n      <Content>\n        <div className={styles.description}>\n          {descriptions.map((item, i) => (\n            <p key={i}>{item}</p>\n          ))}\n        </div>\n        {work.map((group, index) => (\n          <div key={index}>\n            <div\n              className={styles.category}\n              style={{\n                backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2)), url(${group.image.childImageSharp.gatsbyImageData.images.fallback.src})`,\n              }}\n            >\n              <h3 className={styles.categoryTitle}>\n                <TranslatedMessage text={group.category} />\n              </h3>\n            </div>\n            <div className={styles.items}>\n              {itemsGrouped(group.items).map((itemGroup, ig) => (\n                <div\n                  className={cx('row', { incompleted: itemGroup.length < 2 })}\n                  key={ig}\n                >\n                  {itemGroup.map((item, index) => {\n                    const entities = getEntities(item)\n                    return (\n                      <div key={index} className={styles.col}>\n                        <div className={styles.item}>\n                          <Title title={item.title} />\n                          {hasMetadata(item) && (\n                            <div className={styles.metadataList}>\n                              {sectionKeys.map((metaKey) => (\n                                <MetadataItem\n                                  key={metaKey}\n                                  metaKey={metaKey}\n                                  item={item}\n                                />\n                              ))}\n                            </div>\n                          )}\n                          {entities.length > 0 && (\n                            <div className={styles.places}>\n                              <div className={styles.placeList}>\n                                {entities.map((place, index) => (\n                                  <div key={index} className={styles.place}>\n                                    <TranslatedMessage text={place.name} />\n                                    {place.location && (\n                                      <span>&nbsp;({place.location})</span>\n                                    )}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        {education && (\n          <>\n            <h2 className={styles.sectionTitle}>\n              <FormattedMessage id=\"curriculum.education\" />\n            </h2>\n            <ul className={styles.education}>\n              {education.map((item, index) => (\n                <li key={index}>\n                  <div className={styles.educationItem}>\n                    <Title title={item.title} />\n                    {hasMetadata(item) && (\n                      <div className={styles.metadataList}>\n                        {sectionKeys.map((metaKey) => (\n                          <MetadataItem\n                            key={metaKey}\n                            metaKey={metaKey}\n                            item={item}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </Content>\n    </>\n  )\n}\n\nexport default CurriculumVitae\n","import React from 'react'\nimport { useIntl } from 'react-intl'\n\nexport default function useFormatMessage(messageId) {\n  const intl = useIntl()\n  return intl.formatMessage({ id: messageId })\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n  var intl = React.useContext(Context);\n  invariantIntlContext(intl);\n  return intl;\n}","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport CurriculumVitae from '../components/CurriculumVitae'\n\nconst CVPage = ({ data, location }) => {\n  const { title, locale } = data.markdownRemark.frontmatter\n  const content = data.allCvJson.edges[0].node\n  const education = content.education\n  const work = content.work.filter((work) => work.identifier !== 'direction')\n  const metaImage = work[0].image.childImageSharp.gatsbyImageData.src\n  return (\n    <Layout pageData={{ ...data, metaImage, locale }} location={location}>\n      {({ pdfFiles }) => (\n        <CurriculumVitae\n          title={title}\n          pdf={{\n            filepath: pdfFiles.cv,\n            i18n: 'footer.downloadCv',\n          }}\n          work={work}\n          education={education}\n        />\n      )}\n    </Layout>\n  )\n}\n\nexport default CVPage\nexport const pageQuery = graphql`\n  query CvCurriculumQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        id\n        title\n        description\n        keywords\n        locale\n      }\n    }\n    allCvJson {\n      edges {\n        node {\n          education {\n            title {\n              es\n              ca\n            }\n            teacher\n            is_career\n            years\n          }\n          contact {\n            email\n            phone\n          }\n          work {\n            identifier\n            description {\n              es\n              ca\n            }\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n            category {\n              es\n              ca\n            }\n            items {\n              title {\n                es\n                ca\n              }\n              years\n              director\n              production\n              author\n              company {\n                name {\n                  es\n                  ca\n                }\n                url\n                id\n              }\n              played {\n                id\n                name {\n                  es\n                  ca\n                }\n                location\n              }\n              producers {\n                id\n                name {\n                  es\n                  ca\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["children","className","styles","TranslatedMessage","text","translated","useContext","AppContext","locale","console","log","cx","cn","METADATA","teacher","director","author","company","production","MetaLink","metaKey","url","name","href","target","hasMetadata","item","Object","keys","map","_meta","meta","Title","title","MetadataItem","content","type","isArray","Array","useFormatMessage","join","education","work","pdf","showYears","descriptions","pdfText","i18n","sections","base","years","getSections","sectionKeys","Header","filepath","rel","Content","i","key","group","index","style","backgroundImage","image","childImageSharp","gatsbyImageData","images","fallback","src","category","items","reduce","memo","lastRowIndex","length","lastRow","push","itemGroup","ig","incompleted","entities","played","producers","getEntities","place","location","id","messageId","intl","useIntl","formatMessage","data","markdownRemark","frontmatter","allCvJson","edges","node","filter","identifier","metaImage","pageData","pdfFiles","cv"],"sourceRoot":""}