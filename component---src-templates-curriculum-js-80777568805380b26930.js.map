{"version":3,"sources":["webpack:///./src/components/Content/index.js","webpack:///./src/components/CurriculumVitae/index.module.scss","webpack:///./src/hooks/useFormatMessage.js","webpack:///./node_modules/react-intl/lib/src/components/useIntl.js","webpack:///./src/components/TranslatedMessage/index.js","webpack:///./src/components/CurriculumVitae/index.js","webpack:///./src/templates/curriculum.js","webpack:///./src/components/Content/index.module.scss"],"names":["Content","children","className","styles","content","contentInner","module","exports","useFormatMessage","messageId","intl","useIntl","formatMessage","id","TranslatedMessage","text","translated","useContext","AppContext","locale","console","log","cx","cn","bind","METADATA","teacher","director","author","years","company","production","MetaLink","metaKey","url","name","metadata","href","target","hasMetadata","item","Object","keys","map","meta","Title","title","MetadataItem","isCareer","type","isArray","Array","contentMeta","join","CurriculumVitae","cvPdfPath","education","work","Header","infoLine","rel","group","index","key","category","style","backgroundImage","image","childImageSharp","fluid","src","categoryTitle","items","reduce","memo","lastRowIndex","length","lastRow","push","itemGroup","ig","incompleted","col","metadataList","played","places","placeList","place","location","sectionTitle","educationItem","CVPage","data","markdownRemark","frontmatter","allCvJson","edges","node","metaImage","Layout","pageData"],"mappings":"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","file":"component---src-templates-curriculum-js-80777568805380b26930.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './index.module.scss'\n\nconst Content = ({ children }) => (\n  <div className={styles.content}>\n    <div className={styles.contentInner}>\n      {children}\n    </div>\n  </div>\n)\n\nContent.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Content\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoLine\":\"index-module--infoLine--2xliA\",\"separator\":\"index-module--separator--KEeWF\",\"sectionTitle\":\"index-module--sectionTitle--3RWA5\",\"category\":\"index-module--category--wUl2R\",\"categoryTitle\":\"index-module--categoryTitle--38gm-\",\"items\":\"index-module--items--gsMVL\",\"row\":\"index-module--row--3Puyv\",\"col\":\"index-module--col--awH71\",\"incompleted\":\"index-module--incompleted--EYVkw\",\"item\":\"index-module--item--2f3Ll\",\"places\":\"index-module--places--3tJH2\",\"place\":\"index-module--place--2f35N\",\"placeList\":\"index-module--placeList--1HQeX\",\"tag\":\"index-module--tag--rrKTR\",\"education\":\"index-module--education--3X4BX\",\"educationItem\":\"index-module--educationItem--3h-L2\",\"title\":\"index-module--title--336Zs\",\"metadataList\":\"index-module--metadataList--3fyoe\",\"metadata\":\"index-module--metadata--3HG13\"};","import React from 'react';\nimport { useIntl } from 'react-intl'\n\nexport default function useFormatMessage (messageId) {\n  const intl = useIntl();\n  return intl.formatMessage({ id: messageId })\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n  var intl = React.useContext(Context);\n  invariantIntlContext(intl);\n  return intl;\n}","import React, { useContext } from 'react'\nimport AppContext from '../../context/AppContext'\n\nexport default function TranslatedMessage({ text }) {\n  const app = useContext(AppContext)\n  const translated = text[app.locale]\n\n  if (typeof text === 'string') return text\n\n  if (!translated) {\n    console.log('wat', text)\n  }\n\n  return translated || null\n}\n","import * as React from 'react'\nimport cn from 'classnames/bind'\n\nimport { FormattedMessage } from 'react-intl'\nimport TranslatedMessage from '../TranslatedMessage'\nimport useFormatMessage from '../../hooks/useFormatMessage'\nimport Header from '../Header'\nimport Content from '../Content'\n\nimport styles from './index.module.scss'\nconst cx = cn.bind(styles)\n\nconst METADATA = {\n  teacher: 'Professor/a',\n  director: 'Director',\n  author: 'Autor',\n  years: 'Anys',\n  company: 'Companyia',\n  production: 'Productora'\n}\n\nfunction itemsGrouped (items) {\n  return items.reduce((memo, item) => {\n    const lastRowIndex = memo.length - 1\n    const lastRow = memo[lastRowIndex]\n    if (lastRow && lastRow.length < 2) {\n      memo[lastRowIndex].push(item)\n    } else {\n      memo.push([item])\n    }\n    return memo\n  }, [])\n}\n\nfunction MetaLink ({ metaKey, url, name }) {\n  return (\n    <div className={styles.metadata}>\n      <strong>{METADATA[metaKey]}</strong>\n      {!!url &&\n        <a href={url} target='_bkank'>\n          <TranslatedMessage text={name} />\n        </a>\n      }\n      {!url && <TranslatedMessage text={name} />}\n    </div>\n  )\n}\n\nfunction hasMetadata(item) {\n  return !!Object.keys(METADATA).map(meta => !item.meta)\n}\n\nfunction Title ({ title }) {\n  return (\n    <h4 className={styles.title}>\n      <TranslatedMessage text={title} />\n    </h4>\n  )\n}\n\nfunction MetadataItem ({ metaKey, item }) {\n  const content = item[metaKey]\n  const isCareer = item['is_career']\n  let name\n\n  if (!content) return null\n\n  if (metaKey !== 'company') {\n    name = content\n  } else if (metaKey === 'company') {\n    return (\n      <MetaLink\n        metaKey={metaKey}\n        url={content.url}\n        name={content.name}\n      />\n    )\n  } else {\n    name = content.name\n  }\n\n  const type = typeof name\n  const isArray = Array.isArray(name)\n  if (type !== 'string' && type !== 'number' && !isArray) return null\n  const contentMeta = useFormatMessage(`curriculum.${metaKey}`)\n  const meta = metaKey === 'years' && isCareer ? 'Promoci√≥' : contentMeta\n  name = isArray ? name.join(', ') : name\n  return (\n    <div className={styles.metadata}>\n      {metaKey !== 'years' &&\n       <strong>{meta}</strong>\n      }\n      <TranslatedMessage text={name} />\n    </div>\n  )\n}\n\nconst CurriculumVitae = ({ title, content, cvPdfPath }) => {\n  const { education, work } = content\n  return (\n    <>\n      <Header title={title}>\n        <div className={styles.infoLine}>\n          <ul>\n            <li>\n              <a href={cvPdfPath} target='_blank' rel='noopener noreferrer'>\n                <FormattedMessage id='footer.downloadCv' />\n              </a>\n            </li>\n          </ul>\n        </div>\n      </Header>\n      <Content>\n        {work.map((group, index) =>\n          <div key={index}>\n            <div\n              className={styles.category}\n              style={{ backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2)), url(${group.image.childImageSharp.fluid.src})` }}\n            >\n              <h3 className={styles.categoryTitle}>\n                <TranslatedMessage text={group.category} />\n              </h3>\n            </div>\n            <div className={styles.items}>\n              {itemsGrouped(group.items).map((itemGroup, ig) =>\n                <div\n                  className={cx('row', { incompleted: itemGroup.length < 2})}\n                  key={ig}\n                >\n                  {itemGroup.map((item, index) =>\n                    <div key={index} className={styles.col}>\n                      <div className={styles.item}>\n                        <Title title={item.title} />\n                        {hasMetadata(item) &&\n                          <div className={styles.metadataList}>\n                            {Object.keys(METADATA).map(metaKey =>\n                              <MetadataItem\n                                key={metaKey}\n                                metaKey={metaKey}\n                                item={item}\n                              />\n                            )}\n                          </div>\n                        }\n                        {item.played.length > 0 &&\n                          <div className={styles.places}>\n                            <strong>Productora:</strong>\n                            <div className={styles.placeList}>\n                              {item.played.map((place, index)=>\n                                <div key={index} className={styles.place}>\n                                  <TranslatedMessage text={place.name} />\n                                  {place.location && <span>&nbsp;({place.location})</span>}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        <h2 className={styles.sectionTitle}>\n          <FormattedMessage id='curriculum.education' />\n        </h2>\n        <ul className={styles.education}>\n          {education.map((item, index) =>\n            <li key={index}>\n              <div className={styles.educationItem}>\n                <Title title={item.title} />\n                {hasMetadata(item) &&\n                 <div className={styles.metadataList}>\n                   {Object.keys(METADATA).map(metaKey =>\n                      <MetadataItem\n                        key={metaKey}\n                        metaKey={metaKey}\n                        item={item}\n                      />\n                    )}\n                 </div>\n                }\n              </div>\n            </li>\n          )}\n        </ul>\n      </Content>\n    </>\n  )\n}\n\nexport default CurriculumVitae\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport CurriculumVitae from '../components/CurriculumVitae'\n\nconst CVPage = ({ data, cvPdfPath, location }) => {\n  const { title, locale } = data.markdownRemark.frontmatter\n  const content = data.allCvJson.edges[0].node\n  const metaImage = content.work[0].image.childImageSharp.fluid.src\n  return (\n    <Layout pageData={{ ...data, metaImage, locale }} location={location}>\n      {({ cvPdfPath }) => (\n        <CurriculumVitae\n          title={title}\n          cvPdfPath={cvPdfPath}\n          content={content}\n        />\n      )}\n    </Layout>\n  )\n}\n\nexport default CVPage\n\nexport const pageQuery = graphql`\n  query CvPageQuery($id: String!) {\n    markdownRemark(id: {eq: $id}) {\n      frontmatter {\n        id\n        title\n        description\n        keywords\n        locale\n      }\n    }\n    allCvJson {\n      edges {\n        node {\n          education {\n            title { es ca }\n            teacher\n            is_career\n            years\n          }\n          contact {\n            email\n            phone\n          }\n          work {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            category { es ca }\n            items {\n              title { es ca }\n              years\n              director\n              production\n              author\n              company {\n                name { es ca }\n                url\n                id\n              }\n              played {\n                id\n                name { es ca }\n                location\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"index-module--content--3DmGQ\",\"contentInner\":\"index-module--contentInner--28CwS\"};"],"sourceRoot":""}