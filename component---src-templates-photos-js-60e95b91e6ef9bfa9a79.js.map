{"version":3,"sources":["webpack:///./src/components/Photos/index.js","webpack:///./src/templates/photos.js"],"names":["Photos","_ref","images","title","description","react_default","a","createElement","Fragment","Header","className","styles","intro","Content","Gallery","PhotosTemplate","data","location","_data$markdownRemark$","markdownRemark","frontmatter","locale","metaImage","src","childImageSharp","fluid","Layout","pageData","Object","assign","components_Photos","pageQuery"],"mappings":"iLAqBeA,EAbA,SAAAC,GAAoC,IAAjCC,EAAiCD,EAAjCC,OAAQC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,YAC/B,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQN,MAAOA,GACbE,EAAAC,EAAAC,cAAA,KAAGG,UAAWC,IAAOC,OAAQR,IAE/BC,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASZ,OAAQA,+CCGVa,UAZQ,SAAAd,GAAwB,IAArBe,EAAqBf,EAArBe,KAAMC,EAAehB,EAAfgB,SAAeC,EACEF,EAAKG,eAAeC,YAA3DjB,EADqCe,EACrCf,MAAOC,EAD8Bc,EAC9Bd,YAAaF,EADiBgB,EACjBhB,OAAQmB,EADSH,EACTG,OAC9BC,EAAYpB,EAAO,GAAGqB,IAAIC,gBAAgBC,MAAMF,IACtD,OACElB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAQC,OAAAC,OAAA,GAAOb,EAAP,CAAaM,YAAWD,WAAUJ,SAAUA,GACzD,kBACCZ,EAAAC,EAAAC,cAACuB,EAAD,CAAQ3B,MAAOA,EAAOC,YAAaA,EAAaF,OAAQA,OANhE,IAca6B,EAAS","file":"component---src-templates-photos-js-60e95b91e6ef9bfa9a79.js","sourcesContent":["import React from 'react'\n\nimport Gallery from '../Gallery'\nimport Header from '../Header'\nimport Content from '../Content'\n\nimport styles from './index.module.scss'\n\nconst Photos = ({ images, title, description }) => {\n  return (\n    <>\n      <Header title={title}>\n        <p className={styles.intro}>{description}</p>\n      </Header>\n      <Content>\n        <Gallery images={images} />\n      </Content>\n    </>\n  )\n}\n\nexport default Photos\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Photos from '../components/Photos'\n\nconst PhotosTemplate = ({ data, location }) => {\n  const { title, description, images, locale } = data.markdownRemark.frontmatter\n  const metaImage = images[0].src.childImageSharp.fluid.src\n  return (\n    <Layout pageData={{ ...data, metaImage, locale }} location={location}>\n      {() => (\n        <Photos title={title} description={description} images={images} />\n      )}\n    </Layout>\n  )\n}\n\nexport default PhotosTemplate\n\nexport const pageQuery = graphql`\n  query PhotosPageQuery($id: String!) {\n    markdownRemark(id: {eq: $id}) {\n      frontmatter {\n        id\n        title\n        description\n        keywords\n        locale\n        path\n        images {\n          title\n          alt\n          src {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          full\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}